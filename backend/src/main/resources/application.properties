# spring.application.name=PickingParking
# server.address=0.0.0.0
# server.port=8080

# # MySQL ??
# spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# spring.datasource.url=jdbc:mysql://k11a102.p.ssafy.io:3306/pickingparking?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
# spring.datasource.username=${DB_USERNAME}
# spring.datasource.password=${DB_PASSWORD}

# #true ?? ? jpa ??? ?? ??
# spring.jpa.show-sql=true
# spring.jpa.hibernate.ddl-auto=update
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# # Swagger UI 활성화
# springdoc.swagger-ui.enabled=true

# # OpenAPI 문서 기본 경로 설정
# springdoc.api-docs.enabled=true

# # Swagger UI의 기본 경로 (필요한 경우 경로 수정 가능)
# springdoc.swagger-ui.path=/swagger-ui/index.html

# logging.file.name=logs/application.log
# logging.level.a102.PickingParking=INFO

# 애플리케이션 기본 설정
spring.application.name=PickingParking
server.address=0.0.0.0
server.port=8080

# MySQL 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://k11a102.p.ssafy.io:3306/pickingparking?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# JPA 설정
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Swagger 설정
springdoc.swagger-ui.enabled=true
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui/index.html
# 아래 설정 추가
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha
springdoc.default-produces-media-type=application/json
springdoc.default-consumes-media-type=application/json

# 로깅 설정
logging.file.name=logs/application.log
logging.level.a102.PickingParking=INFO

# SSL/TLS 에러 해결을 위한 서버 설정
server.tomcat.max-http-form-post-size=2MB
server.tomcat.max-swallow-size=2MB
server.tomcat.max-http-header-size=8KB

# CORS 설정
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.max-age=3600